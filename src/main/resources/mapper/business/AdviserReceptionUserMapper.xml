<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gency.subscribe.dao.business.AdviserReceptionUserMapper">
  <resultMap id="BaseResultMap" type="com.gency.subscribe.model.business.AdviserReceptionUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="adviser_id" jdbcType="INTEGER" property="adviserId" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, adviser_id, user_tel, create_time, state,user_name
  </sql>
  <insert id="insertSelective" parameterType="com.gency.subscribe.model.business.AdviserReceptionUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adviser_reception_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adviserId != null">
        adviser_id,
      </if>
      <if test="userTel != null">
        user_tel,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adviserId != null">
        #{adviserId,jdbcType=INTEGER},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gency.subscribe.model.business.AdviserReceptionUser">
    update adviser_reception_user
    <set>
      <if test="adviserId != null">
        adviser_id = #{adviserId,jdbcType=INTEGER},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="sql_columns">
    id,adviser_id,user_tel,create_time,state
  </sql>
  <sql id="sql_where">
    <if test="item !=null "> 
 <where>
      <if test="null != item.id">and id = #{item.id}</if>
      <if test="null != item.adviserId">and adviser_id = #{item.adviserId}</if>
      <if test="null != item.userTel and '' != item.userTel">and user_tel = #{item.userTel}</if>
      <if test="null != item.createTime and '' != item.createTime">and create_time = #{item.createTime}</if>
      <if test="null != item.state">and state = #{item.state}</if>
	</where> 
 </if>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from adviser_reception_user where id = #{id} and isDelete=0 
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from adviser_reception_user <include refid="sql_where" /> limit 1
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from adviser_reception_user <include refid="sql_where" />  order by id desc
  </select>
  <sql id="sql_save_columns">
    insert into adviser_reception_user(
	  <if test="null != item.adviserId"> adviser_id</if>
	  <if test="null != item.userTel">, user_tel</if>
	  <if test="null != item.createTime">, create_time</if>
	  <if test="null != item.state">, state</if>
	) values
  </sql>
  <sql id="sql_save_values">
    (
	  <if test="null != item.adviserId"> #{item.adviserId}</if>
	  <if test="null != item.userTel">, #{item.userTel}</if>
	  <if test="null != item.createTime">, #{item.createTime}</if>
	  <if test="null != item.state">, #{item.state}</if>
	)
  </sql>
  <insert id="save" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_save_columns" /><include refid="sql_save_values" />
  </insert>
  <insert id="batchSave">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_save_columns" /><include refid="sql_save_values" />
	</foreach>
  </insert>
  <sql id="sql_update">
    update adviser_reception_user
 <set> 
      <if test="null != item.adviserId">adviser_id = #{item.adviserId},</if>
      <if test="null != item.userTel">user_tel = #{item.userTel},</if>
      <if test="null != item.createTime">create_time = #{item.createTime},</if>
      <if test="null != item.state">state = #{item.state},</if>
</set>	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <delete id="delArray">
    delete from adviser_reception_user where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from adviser_reception_user where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delByCondition">
     update adviser_reception_user set isDelete=1 <include refid="sql_where" />
  </delete>
  <delete id="delById">
     update adviser_reception_user set isDelete=1  where id =#{id} 
  </delete>
  
  <select id = "getAdviserForUser" resultType="com.gency.subscribe.model.business.AccAdviserBase">
    SELECT t1.id,t1.name,t1.phone,COUNT(t2.id) as total_order_num 
	from acc_adviser_base t1  LEFT JOIN adviser_reception_user t2 on t1.id= t2.adviser_id where t1.isDelete=0 
	GROUP BY t1.id ORDER BY total_order_num asc  LIMIT 1
  
  </select>
  
</mapper>
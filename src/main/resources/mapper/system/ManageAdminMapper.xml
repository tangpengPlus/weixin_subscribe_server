<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gency.subscribe.dao.sys.ManageAdminMapper">
  <resultMap id="BaseResultMap" type="com.gency.subscribe.model.system.ManageAdmin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="unencryptedPassword" jdbcType="VARCHAR" property="unencryptedpassword" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="lastLoginIp" jdbcType="VARCHAR" property="lastloginip" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
    <result column="createadmin" jdbcType="INTEGER" property="createadmin" />
  </resultMap>
  <sql id="Base_Column_List">
    id, number, state, type, loginname, unencryptedPassword, password, salt,
    createtime, lastLoginIp, lastLoginTime, isDelete, createadmin
  </sql>
  <insert id="insertSelective" parameterType="com.gency.subscribe.model.system.ManageAdmin">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into manage_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        number,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="loginname != null">
        loginname,
      </if>
      <if test="unencryptedpassword != null">
        unencryptedPassword,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="lastloginip != null">
        lastLoginIp,
      </if>
      <if test="lastlogintime != null">
        lastLoginTime,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
      <if test="createadmin != null">
        createadmin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="unencryptedpassword != null">
        #{unencryptedpassword,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip != null">
        #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="createadmin != null">
        #{createadmin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gency.subscribe.model.system.ManageAdmin">
    update manage_admin
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="unencryptedpassword != null">
        unencryptedPassword = #{unencryptedpassword,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip != null">
        lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="createadmin != null">
        createadmin = #{createadmin,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="sql_columns">
    id,number,state,type,loginname,unencryptedPassword,password,salt,createtime,lastLoginIp,lastLoginTime,isDelete,createadmin
  </sql>
  <sql id="sql_where">
    <if test="item !=null "> 
 <where>
      <if test="null != item.id">and id = #{item.id}</if>
      <if test="null != item.number and '' != item.number">and number = #{item.number}</if>
      <if test="null != item.state">and state = #{item.state}</if>
      <if test="null != item.type">and type = #{item.type}</if>
      <if test="null != item.loginname and '' != item.loginname">and loginname = #{item.loginname}</if>
      <if test="null != item.unencryptedpassword and '' != item.unencryptedpassword">and unencryptedPassword = #{item.unencryptedpassword}</if>
      <if test="null != item.password and '' != item.password">and password = #{item.password}</if>
      <if test="null != item.salt and '' != item.salt">and salt = #{item.salt}</if>
      <if test="null != item.createtime and '' != item.createtime">and createtime = #{item.createtime}</if>
      <if test="null != item.lastloginip and '' != item.lastloginip">and lastLoginIp = #{item.lastloginip}</if>
      <if test="null != item.lastlogintime and '' != item.lastlogintime">and lastLoginTime = #{item.lastlogintime}</if>
      <if test="null != item.isdelete">and isDelete = #{item.isdelete}</if>
      <if test="null != item.createadmin">and createadmin = #{item.createadmin}</if>
	</where> 
 </if>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select ma.id,ma.number,ma.state,ma.type,ma.loginname,ma.unencryptedPassword,ma.password,ma.salt,ma.createtime,
    ma.lastLoginIp,ma.lastLoginTime,ma.isDelete,ma.createadmin from manage_admin ma
    where ma.id = #{id} and ma.isDelete=0 
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from manage_admin <include refid="sql_where" /> limit 1
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select ma.id,ma.number,ma.state,ma.type,ma.loginname,ma.unencryptedPassword,ma.password,ma.salt,ma.createtime,
    ma.lastLoginIp,ma.lastLoginTime,ma.isDelete,ma.createadmin  from manage_admin ma 
    <include refid="sql_where" />  order by ma.id desc
  </select>
  <select id="getAdminRoleRelation" resultType="int">
    select roleId from manage_role_admin where adminId=#{adminId}
  </select>
  
  <sql id="sql_save_columns">
    insert into manage_admin(
	  <if test="null != item.number"> number</if>
	  <if test="null != item.state">, state</if>
	  <if test="null != item.type">, type</if>
	  <if test="null != item.loginname">, loginname</if>
	  <if test="null != item.unencryptedpassword">, unencryptedPassword</if>
	  <if test="null != item.password">, password</if>
	  <if test="null != item.salt">, salt</if>
	  <if test="null != item.createtime">, createtime</if>
	  <if test="null != item.lastloginip">, lastLoginIp</if>
	  <if test="null != item.lastlogintime">, lastLoginTime</if>
	  <if test="null != item.isdelete">, isDelete</if>
	  <if test="null != item.createadmin">, createadmin</if>
	) values
  </sql>
  <sql id="sql_save_values">
    (
	  <if test="null != item.number"> #{item.number}</if>
	  <if test="null != item.state">, #{item.state}</if>
	  <if test="null != item.type">, #{item.type}</if>
	  <if test="null != item.loginname">, #{item.loginname}</if>
	  <if test="null != item.unencryptedpassword">, #{item.unencryptedpassword}</if>
	  <if test="null != item.password">, #{item.password}</if>
	  <if test="null != item.salt">, #{item.salt}</if>
	  <if test="null != item.createtime">, #{item.createtime}</if>
	  <if test="null != item.lastloginip">, #{item.lastloginip}</if>
	  <if test="null != item.lastlogintime">, #{item.lastlogintime}</if>
	  <if test="null != item.isdelete">, #{item.isdelete}</if>
	  <if test="null != item.createadmin">, #{item.createadmin}</if>
	)
  </sql>
  <insert id="save" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_save_columns" /><include refid="sql_save_values" />
  </insert>
  <insert id="batchSave">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_save_columns" /><include refid="sql_save_values" />
	</foreach>
  </insert>
  <insert id="addAdminRelationRole">
  	insert into manage_role_admin (adminId,roleId) values(#{adminId},#{roleId})
  </insert>
  <sql id="sql_update">
    update manage_admin
 <set> 
      <if test="null != item.number">number = #{item.number},</if>
      <if test="null != item.state">state = #{item.state},</if>
      <if test="null != item.type">type = #{item.type},</if>
      <if test="null != item.loginname">loginname = #{item.loginname},</if>
      <if test="null != item.unencryptedpassword">unencryptedPassword = #{item.unencryptedpassword},</if>
      <if test="null != item.password">password = #{item.password},</if>
      <if test="null != item.salt">salt = #{item.salt},</if>
      <if test="null != item.createtime">createtime = #{item.createtime},</if>
      <if test="null != item.lastloginip">lastLoginIp = #{item.lastloginip},</if>
      <if test="null != item.lastlogintime">lastLoginTime = #{item.lastlogintime},</if>
      <if test="null != item.isdelete">isDelete = #{item.isdelete},</if>
      <if test="null != item.createadmin">createadmin = #{item.createadmin},</if>
</set>	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <delete id="delArray">
    delete from manage_admin where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from manage_admin where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delByCondition">
     update manage_admin set isDelete=1 <include refid="sql_where" />
  </delete>
  <delete id="delById">
     update manage_admin set isDelete=1  where id =#{id} 
  </delete>
  <delete id="deleteAdminRelationRole">
    delete from manage_role_admin where adminId=#{adminId}
  
  </delete>
  
  
</mapper>
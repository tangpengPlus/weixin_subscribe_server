<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gency.subscribe.dao.sys.ManageRoleMapper">
  <resultMap id="BaseResultMap" type="com.gency.subscribe.model.system.ManageRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createadmin" jdbcType="INTEGER" property="createadmin" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="roledescribe" jdbcType="VARCHAR" property="roledescribe" />
    <result column="roletype" jdbcType="INTEGER" property="roletype" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, number, createtime, createadmin, rolename, roledescribe, roletype, isDelete
  </sql>
  <insert id="insertSelective" parameterType="com.gency.subscribe.model.system.ManageRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into manage_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        number,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createadmin != null">
        createadmin,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="roledescribe != null">
        roledescribe,
      </if>
      <if test="roletype != null">
        roletype,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createadmin != null">
        #{createadmin,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledescribe != null">
        #{roledescribe,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        #{roletype,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gency.subscribe.model.system.ManageRole">
    update manage_role
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createadmin != null">
        createadmin = #{createadmin,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledescribe != null">
        roledescribe = #{roledescribe,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        roletype = #{roletype,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="sql_columns">
    id,number,createtime,createadmin,rolename,roledescribe,roletype,isDelete
  </sql>
  <sql id="sql_where">
    <if test="item !=null "> 
 <where>
      <if test="null != item.id">and id = #{item.id}</if>
      <if test="null != item.number and '' != item.number">and number = #{item.number}</if>
      <if test="null != item.createtime and '' != item.createtime">and createtime = #{item.createtime}</if>
      <if test="null != item.createadmin">and createadmin = #{item.createadmin}</if>
      <if test="null != item.rolename and '' != item.rolename">and rolename = #{item.rolename}</if>
      <if test="null != item.roledescribe and '' != item.roledescribe">and roledescribe = #{item.roledescribe}</if>
      <if test="null != item.roletype">and roletype = #{item.roletype}</if>
      <if test="null != item.isdelete">and isDelete = #{item.isdelete}</if>
	</where> 
 </if>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from manage_role where id = #{id} and isDelete=0 
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from manage_role <include refid="sql_where" /> limit 1
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from manage_role <include refid="sql_where" />  order by id desc
  </select>
  <sql id="sql_save_columns">
    insert into manage_role(
	  <if test="null != item.number"> number</if>
	  <if test="null != item.createtime">, createtime</if>
	  <if test="null != item.createadmin">, createadmin</if>
	  <if test="null != item.rolename">, rolename</if>
	  <if test="null != item.roledescribe">, roledescribe</if>
	  <if test="null != item.roletype">, roletype</if>
	  <if test="null != item.isdelete">, isDelete</if>
	) values
  </sql>
  <sql id="sql_save_values">
    (
	  <if test="null != item.number"> #{item.number}</if>
	  <if test="null != item.createtime">, #{item.createtime}</if>
	  <if test="null != item.createadmin">, #{item.createadmin}</if>
	  <if test="null != item.rolename">, #{item.rolename}</if>
	  <if test="null != item.roledescribe">, #{item.roledescribe}</if>
	  <if test="null != item.roletype">, #{item.roletype}</if>
	  <if test="null != item.isdelete">, #{item.isdelete}</if>
	)
  </sql>
   <insert id="addRoleMenuInfo">
   insert into manage_role_menu(roleId,menuId) values(#{roleId},#{menuId})
   </insert>
  <insert id="addRoleAuthorInfo">
   insert into manage_role_author(roleId,authorId) values(#{roleId},#{authorId})
   </insert>
  <insert id="save" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_save_columns" /><include refid="sql_save_values" />
  </insert>
  <insert id="batchSave">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
	  <include refid="sql_save_columns" /><include refid="sql_save_values" />
	</foreach>
  </insert>
  <sql id="sql_update">
    update manage_role
 <set> 
      <if test="null != item.number">number = #{item.number},</if>
      <if test="null != item.createtime">createtime = #{item.createtime},</if>
      <if test="null != item.createadmin">createadmin = #{item.createadmin},</if>
      <if test="null != item.rolename">rolename = #{item.rolename},</if>
      <if test="null != item.roledescribe">roledescribe = #{item.roledescribe},</if>
      <if test="null != item.roletype">roletype = #{item.roletype},</if>
      <if test="null != item.isdelete">isDelete = #{item.isdelete},</if>
</set>	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <delete id="delArray">
    delete from manage_role where id in
	<foreach close=")" collection="array" index="index" item="item" open="(" separator=",">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from manage_role where id in
	<foreach close=")" collection="list" index="index" item="item" open="(" separator=",">#{item}</foreach>
  </delete>
  <delete id="delByCondition">
     update manage_role set isDelete=1 <include refid="sql_where" />
  </delete>
  <delete id="delById">
     update manage_role set isDelete=1  where id =#{id} 
  </delete>
  <delete id="deleteRoleMenuInfo">
     delete from  manage_role_menu where roleId=#{roleId}
  </delete>
  
  <delete id="deleteRoleAuthorInfo">
     delete from  manage_role_author where roleId=#{roleId}
  </delete>
  
  
</mapper>